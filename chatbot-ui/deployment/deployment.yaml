kind: Deployment
apiVersion: apps/v1
metadata:
  name: gradio-aiops-bot
  labels:
    app: gradio-aiops-bot
spec:
  replicas: 0
  selector:
    matchLabels:
      app: gradio-aiops-bot
  template:
    metadata:
      labels:
        app: gradio-aiops-bot
    spec:
      restartPolicy: Always
      schedulerName: default-scheduler
      affinity: {}
      terminationGracePeriodSeconds: 120
      securityContext: {}
      serviceAccountName: custom-service-account
      containers:
        - resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: "1"
              memory: 2Gi
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: server
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 8
            periodSeconds: 100
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: APP_TITLE
              value: "AIOps Chat!"
            - name: SHOW_TITLE_IMAGE
              value: "True"
            - name: USE_CHATGPT
              value: "True"
            - name: MODEL_NAME
              value: "gpt-4-turbo"
            - name: MODEL_API_KEY
              value: "your_openai_api_key"
            - name: INFERENCE_SERVER_URL
              value: "https://your_inference_endpoint_if_not_openai"
            - name: MILVUS_HOST
              value: "your_milvus_host"
            - name: MILVUS_PORT
              value: "19530"
            - name: MILVUS_USERNAME
              value: "your_milvus_username"
            - name: MILVUS_PASSWORD
              value: "your_milvus_password"
            - name: ML_SERVICE_ENDPOINT
              value: "your_mlasp_endpoint"
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: http
              containerPort: 7860
              protocol: TCP
          imagePullPolicy: IfNotPresent
          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 24
          terminationMessagePolicy: File
          image: "quay.io/avitui/aiops-chatbot:v1.2"
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
